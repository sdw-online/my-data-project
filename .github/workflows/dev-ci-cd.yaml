name: DEV CI/CD Pipeline for Events

on:
  push:
    branches:
      - main

jobs:
  build_dev_environment:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pandas pytest
          python -m pip list

  run_dev_tests:
    needs: build_dev_environment
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code again for the test job
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Set PYTHONPATH to include the src directory
      - name: Set PYTHONPATH
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src

      # 3. Verify Python and pip paths
      - name: Print Python Path
        run: |
          which python
          python --version
          pip --version

      # 4. Run unit and integration tests
      - name: Run unit and integration tests
        run: |
          python -m pytest tests/test_events_dev.py

  create_pr_to_staging:
    needs: run_dev_tests
    runs-on: ubuntu-latest
    steps:
      # 1. Create a Pull Request to the staging branch if tests pass
      - name: Create Pull Request to Staging
        uses: peter-evans/create-pull-request@v3
        with:
          branch: main
          commit-message: "Automatically deploy changes from DEV to staging"
          title: "Deploy changes from DEV to staging"
          body: "This PR automatically deploys all changes from development to staging."
